package homework_25;

/**
 * @author Vasilii Serebrovskii
 * @version 1.0 (03.03.2025)
 */

/**
 * Task 3
 * Неизменяемый объект
 * Создайте класс ImmutablePoint:
 * ----------------------------------
 * •	Объявите final поля x и y типа int.
 * •	Инициализируйте их через конструктор.
 * •	Попытайтесь создать методы-сеттеры для изменения значений x и y.
 * •	Объясните, почему значения полей не могут быть изменены после создания объекта.
 */
public class ImmutablePoint {
    public final int x;
    public final int y;

    //Constructor - в данном случае значения полей можно присвоить при создании объекта. Но только один раз.
    public ImmutablePoint(int x, int y) {
        this.x = x;
        this.y = y;
    }


    //Геттеры и сеттеры
    // intelliJ IDEA не дает возможности создавать Setter'ы так как значения полей присваиваются/инициализируются при создании объекта, в конструкторе(в данном случае).
    // Ключевое слово final позволяет нам сделать это только ОДИН раз.
    // Сеттеры мы не можем создать для данных переменных, так как они имеют признак final.
    /*
        Возможны и другие вариант инициализации.
        НО проинициализировать наши переменные можем ТОЛЬКО ОДИН раз.

        В пустом конструкторе
        puvlic ImmutablePoint() {
            this.x = 10;
            this.y = 20;
        }

        В блоке инициализации:
        {
           this.x = 10;
           this.y = 20;
        }

        так же можем инициализировать значения при объявлении
         public final int x = 10;
         public final int y = 20;
     */


/*    Task4 * (Опционально)
    Final параметр метода
        •	Напишите метод printMessage(final String message), который выводит сообщение на экран.
        •	Попробуйте изменить значение параметра message внутри метода.
        •	Объясните результат и поведение компилятора.*/

    public static void printMessage(final String message) {

        //message = "This is a new message";
        // Ошибка компиляции : java: final parameter message may not be assigned
        //При определении параметра метода как final, данный параметр определяется/инициализируется при вызове метода и передачи значения в качестве аргумента.
        // Внутри метода, мы не можем изменить данное значение, так как оно объявлено с ключевым словом final
        System.out.println(message);

    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }
}
