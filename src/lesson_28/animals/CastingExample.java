package lesson_28.animals;

/**
 * @author Vasilii Serebrovskii
 * @version 1.0 (06.03.2025)
 */
/*
    В Java объекты могут принадлежать одному классу Х и при этом могут быть приведены к другому типу если между классами есть связь наследования!
    Das heißt КАСТИНГ!
    Он бывает 2х видом
        1 восходящее преобразование (up casting) - преобразование объекта дочернего класса в тип родительского класса.
        2 низходящее преобразование (down casting) - преобразование объекта родительского класса в тип дочернего класса.
 */
public class CastingExample {

    public static void main(String[] args) {

        // Восходящее и нисходящее преобразование
        // Восходящее происходит автоматически

        Animal animal = new Cat(); // неявное восходящее преобразование
        /*
           !!! ВАЖНО !
           (ТИП Ссылки и тип переменной) Тип ссылочной переменной определяет:
           1. Ссылки на объекты каких типов, могут храниться в этой переменной
           2. Список методов, которые можно вызвать, обращаясь к этой переменной
         */

        // ссылочная переменная может хранить объект своего класса или любого потомка(ребенка)


        // Какая реализация будет вызвана, определяется объектом, на который храниться ссылка
        animal.voice();

        Animal animal1 = new Hamster(); // Неявное автоматическое преобразование Hamster к типу Animal

        animal1.voice();

        Animal[] animals = new Animal[3];
        animals[0] = animal;
        animals[1] = animal1;
        animals[2] = new Dog();
        System.out.println("\n===================\n");
        for (int i = 0; i < animals.length; i++) {
            animals[i].voice();
        }

        // Todo: Нисходящее преобразование


    }
}
